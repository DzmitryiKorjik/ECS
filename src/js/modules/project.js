"use strict";

document.addEventListener('DOMContentLoaded', () => {
  const toggle = document.querySelector('.header__dropdown-toggle');
  const menu = document.querySelector('.header__dropdown-menu');

  toggle.addEventListener('click', (event) => {
      event.preventDefault(); 
      const isExpanded = toggle.getAttribute('aria-expanded') === 'true';
     
      toggle.setAttribute('aria-expanded', !isExpanded);
   
      if (isExpanded) {
          menu.style.display = 'none';
      } else {
          menu.style.display = 'block';
      }
  });

  document.addEventListener('click', (event) => {
      if (!toggle.contains(event.target) && !menu.contains(event.target)) {
          menu.style.display = 'none';
          toggle.setAttribute('aria-expanded', 'false');
      }
  });
});


document.addEventListener('DOMContentLoaded', () => {
    const repoList = document.getElementById('repo-list');
  
    // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ API-–∑–∞–ø—Ä–æ—Å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
    const repoData = [
      { name: '.github', type: 'folder', lastUpdated: '2 weeks ago' },
      { name: 'bin', type: 'folder', lastUpdated: '3 months ago' },
      { name: 'CHANGELOG.md', type: 'file', lastUpdated: '10 hours ago' },
    ];
  
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    function displayRepoContents(data) {
      repoList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
  
      data.forEach(item => {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞
        const itemDiv = document.createElement('div');
        itemDiv.className = `repo__item repo__item--${item.type}`;
  
        // –ò–∫–æ–Ω–∫–∞
        const icon = document.createElement('span');
        icon.className = 'repo__item-icon';
        icon.textContent = item.type === 'folder' ? 'üìÅ' : 'üìÑ';
  
        // –ò–º—è —Ñ–∞–π–ª–∞/–ø–∞–ø–∫–∏
        const name = document.createElement('span');
        name.className = 'repo__item-name';
        name.textContent = item.name;
  
        // –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        const lastUpdated = document.createElement('span');
        lastUpdated.className = 'repo__item-updated';
        lastUpdated.textContent = item.lastUpdated;
  
        // –°–æ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        itemDiv.appendChild(icon);
        itemDiv.appendChild(name);
        itemDiv.appendChild(lastUpdated);
  
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–æ–∫
        repoList.appendChild(itemDiv);
      });
    }
  
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
    displayRepoContents(repoData);
  });
  
  fetch('https://api.github.com/repos/<owner>/<repo>/contents')
  .then(response => response.json())
  .then(data => {
    const repoData = data.map(item => ({
      name: item.name,
      type: item.type === 'dir' ? 'folder' : 'file',
      lastUpdated: item.commit ? new Date(item.commit.author.date).toLocaleDateString() : 'Unknown',
    }));
    displayRepoContents(repoData);
  })
  .catch(error => console.error('Error fetching data:', error));

